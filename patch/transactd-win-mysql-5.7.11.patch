--- sql/mysqld.h
+++ sql/mysqld.h
@@ -298,7 +298,7 @@ extern ulong opt_ndb_wait_setup;
 extern const char *load_default_groups[];
 extern struct my_option my_long_options[];
 extern struct my_option my_long_early_options[];
-extern bool mysqld_server_started;
+extern MYSQL_PLUGIN_IMPORT bool mysqld_server_started;
 extern "C" MYSQL_PLUGIN_IMPORT int orig_argc;
 extern "C" MYSQL_PLUGIN_IMPORT char **orig_argv;
 extern my_thread_attr_t connection_attrib;
@@ -356,7 +356,7 @@ static inline int my_thread_set_THR_MALLOC(MEM_ROOT ** hdl)
   using my_set_thread_local()/my_get_thread_local().
 */
 extern MYSQL_PLUGIN_IMPORT thread_local_key_t THR_THD;
-extern bool THR_THD_initialized;
+extern MYSQL_PLUGIN_IMPORT bool THR_THD_initialized;
 
 static inline THD * my_thread_get_THR_THD()
 {
@@ -529,7 +529,7 @@ extern PSI_memory_key key_memory_binlog_recover_exec;
 extern PSI_memory_key key_memory_blob_mem_storage;
 
 extern PSI_memory_key key_memory_Sys_var_charptr_value;
-extern PSI_memory_key key_memory_THD_db;
+extern MYSQL_PLUGIN_IMPORT PSI_memory_key key_memory_THD_db;
 extern PSI_memory_key key_memory_user_var_entry;
 extern PSI_memory_key key_memory_user_var_entry_value;
 extern PSI_memory_key key_memory_Slave_job_group_group_relay_log_name;
@@ -619,7 +619,7 @@ extern PSI_memory_key key_memory_write_set_extraction;
 extern PSI_memory_key key_memory_thd_timer;
 extern PSI_memory_key key_memory_THD_Session_tracker;
 extern PSI_memory_key key_memory_THD_Session_sysvar_resource_manager;
-extern PSI_memory_key key_memory_get_all_tables;
+extern MYSQL_PLUGIN_IMPORT PSI_memory_key key_memory_get_all_tables;
 extern PSI_memory_key key_memory_fill_schema_schemata;
 extern PSI_memory_key key_memory_native_functions;
 extern PSI_memory_key key_memory_JSON;
@@ -812,8 +812,8 @@ extern mysql_mutex_t
 extern char* des_key_file;
 extern mysql_mutex_t LOCK_des_key_file;
 #endif
-extern mysql_mutex_t LOCK_server_started;
-extern mysql_cond_t COND_server_started;
+extern MYSQL_PLUGIN_IMPORT mysql_mutex_t LOCK_server_started;
+extern MYSQL_PLUGIN_IMPORT mysql_cond_t COND_server_started;
 extern mysql_mutex_t LOCK_reset_gtid_table;
 extern mysql_mutex_t LOCK_compress_gtid_table;
 extern mysql_cond_t COND_compress_gtid_table;
--- sql/sql_cache.h
+++ sql/sql_cache.h
@@ -544,5 +544,5 @@ struct Query_cache_query_flags
 };
 #define QUERY_CACHE_FLAGS_SIZE sizeof(Query_cache_query_flags)
 
-extern Query_cache query_cache;
+extern MYSQL_PLUGIN_IMPORT Query_cache query_cache;
 #endif
--- sql/mdl.h
+++ sql/mdl.h
@@ -1168,7 +1168,7 @@ extern "C" const char* thd_enter_cond(MYSQL_THD thd, mysql_cond_t *cond,
 
 
 #ifndef DBUG_OFF
-extern mysql_mutex_t LOCK_open;
+extern MYSQL_PLUGIN_IMPORT mysql_mutex_t LOCK_open;
 #endif
 
 
--- sql/sql_base.h
+++ sql/sql_base.h
@@ -120,7 +120,7 @@ enum enum_tdc_remove_table_type {TDC_RT_REMOVE_ALL, TDC_RT_REMOVE_NOT_OWN,
 #define RTFC_CHECK_KILLED_FLAG      0x0004
 
 bool check_dup(const char *db, const char *name, TABLE_LIST *tables);
-extern mysql_mutex_t LOCK_open;
+extern MYSQL_PLUGIN_IMPORT mysql_mutex_t LOCK_open;
 bool table_cache_init(void);
 void table_cache_free(void);
 bool table_def_init(void);
--- sql/rpl_gtid.h
+++ sql/rpl_gtid.h
@@ -571,7 +571,7 @@ private:
 
 
 /// Protects Gtid_state.  See comment above gtid_state for details.
-extern Checkable_rwlock *global_sid_lock;
+extern MYSQL_PLUGIN_IMPORT Checkable_rwlock *global_sid_lock;
 
 /// One of the locks that protects GTID_MODE.  See
 /// get_gtid_mode(enum_gtid_mode_lock).
@@ -3101,7 +3101,7 @@ log.  So at the time the binary log begins, we just set
   NOT_YET_DETERMINED_GROUP
 };
 /// Global state of GTIDs.
-extern Gtid_state *gtid_state;
+extern MYSQL_PLUGIN_IMPORT Gtid_state *gtid_state;
 
 
 /**
