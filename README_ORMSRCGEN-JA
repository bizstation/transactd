ormsrcgen C++ O/Rマッピングソースコードジェネレータ
===============================================================================

ormsrcgen(32|64) はC++ O/Rマッピングのためのソースコードジェネレータです。C++は
動的にクラスを定義することはできないためジェネレータでモデルクラスを生成しコンパ
イルする形式を取ります。
これを使うとC++で簡単に高速なO/Rマッピングを行うことができます。

はじめに
-------------------------------------------------------------------------------
ジェネレータの関連ファイルは source/global/ormsrcgen/templateにインストールされて
います。それぞれのファイルの役割を説明します。

 * ormDataClass_template.cpp : C++ モデルクラスのテンプレート
 * ormDataClass_template.h   : C++ モデルクラスのテンプレート
 * ormMapClass_template.cpp  : C++ マップクラスのテンプレート
 * ormMapClass_template.h    : C++ マップクラスのテンプレート
 * template.cnf              : 設定ファイルのひな形
 * feldNameList_sample.txt   : フィールド名変換ファイルのサンプル

このうち、template.cnf とfeldNameList_sample.txtを必要に応じて編集します。


コマンドラインオプション
-------------------------------------------------------------------------------
コマンドラインオプションは以下の通りです。

command line option:
  -d [ --database_uri ] arg database uri ex:tdap://hostname/dbname?dbfile=trnasctd_schema
  -t [ --table_name ] arg table name
  -c [ --class_name ] arg class name
  -f [ --conf_name ] arg configuration filename

-d :データベースを指定します。
-t :生成するモデルのテーブルを指定します。生成はテーブルごとに行います。
-c :-tで指定したテーブルに対応するモデルのクラス名を指定します。
-f :その他の設定項目を記述したテキストファイル(configuration filename)です。多くの
場合、テーブルが異なっても共通の内容です。configuration filenameはひな形が 
source/global/ormsrcgen/template/template.cnfとして用意されています。これをコピーし
て内容を編集します。


configuration filenameの説明
-------------------------------------------------------------------------------
lang = 
生成するコードの言語を指定します。現在のバージョンでは'C++'のみサポートされます。

files =
1つのモデルのために必要なテンプレートファイルの数を指定します。C++の場合は'2'です。

file1 = (file2 = )
files=で指定した数分のテンプレートファイルのパスを指定します。
デフォルトではfile1 = ormDataClass_template, file2 = ormMapClass_templateとなってい
ますが実際にファイルのあるディレクトリを加え絶対パスで指定してください。

saveDir = 
生成したソースコードを保存するフォルダを指定します。

setPrefix = 
クラスのメンバ変数に値をセットするアクセスメソッド名のプレフィックスを指定します。
例えば、setPrefixを'set'とした場合、nameというフィールドの値をセットするメンバ関数
は
```
setName(const char* v)
```
のようになります。

getPrefix = 
setPrefixと同様に値の取得メソッドにつけらるプレフィックスを指定します。

externWord=
出力されたクラスをDLLやSOなどのライブラリに含めて共有する場合は、class 宣言の後ろに
エクスポートのためのキーワードを付加できます。
```
class $externWord someModel
{
...

};
```

fieldRenameList = 
通常はテーブルに含まれるフィールド名がそのままクラスのメンバ変数名になります。
もし、異なった名前に変更したい場合は、このfieldRenameListで変換リストの書かれたテキ
ストファイルを指定できます。変換リストは、
```
customer_id=id
customer_name=name
```

のように、変換前=変換後の形式で指定します。

name_space = 
モデルクラスの名前空間を指定します。

name_space_map = 
C++の場合、モデルクラスとともに、テーブルとクラスの復元と保存をマッピングするmapクラスも同時に生成されます。
name_space_mapはそのマップクラスの名前空間を指定します。


